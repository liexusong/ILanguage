typedef int I;
typedef void* Ptr;
typedef char Char;
typedef char* Str;

typedef I T;
/*
Types:   EBOFNQSZRCLA
Wrapped: EB  NQSZR
Const:   E     SZRC
Arith:          ZRC
Func:     BOFNQ
Comp:      OF      LA
List:              LA
*/

// begin Generated by type.h.ijs
#define E_t           1 //Error
#define B_t           2 //Builtin
#define O_t           4 //O Composition
#define F_t           8 //Function application
#define N_t          16 //Name
#define Q_t          32 //Quasiquote
#define S_t          64 //String (char)
#define Z_t         128 //Z Integer
#define R_t         256 //Real
#define C_t         512 //Complex
#define L_t        1024 //List
#define A_t        2048 //Array

#define LOWER_E e
#define LOWER_B b
#define LOWER_O o
#define LOWER_F f
#define LOWER_N n
#define LOWER_Q q
#define LOWER_S s
#define LOWER_Z z
#define LOWER_R r
#define LOWER_C c
#define LOWER_L l
#define LOWER_A a

#define ALL_t     E_t + B_t + O_t + F_t + N_t + Q_t + S_t + Z_t + R_t + C_t + L_t + A_t
#define WRAPPED_t E_t + B_t + N_t + Q_t + S_t + Z_t + R_t
#define CONST_t   E_t + S_t + Z_t + R_t + C_t
#define ARITH_t   Z_t + R_t + C_t
#define FUNC_t    B_t + O_t + F_t + N_t + Q_t
#define COMP_t    O_t + F_t + L_t + A_t
#define LIST_t    L_t + A_t
#define NCONST_t  B_t + O_t + F_t + N_t + Q_t + L_t + A_t

#define ON_ALL_TYPES(f) f(E) f(B) f(O) f(F) f(N) f(Q) f(S) f(Z) f(R) f(C) f(L) f(A)
#define ON_WRAPPED_TYPES(f) f(E) f(B) f(N) f(Q) f(S) f(Z) f(R)
#define ON_CONST_TYPES(f) f(E) f(S) f(Z) f(R) f(C)
#define ON_ARITH_TYPES(f) f(Z) f(R) f(C)
#define ON_FUNC_TYPES(f) f(B) f(O) f(F) f(N) f(Q)
#define ON_COMP_TYPES(f) f(O) f(F) f(L) f(A)
#define ON_LIST_TYPES(f) f(L) f(A)
#define ON_NCONST_TYPES(f) f(B) f(O) f(F) f(N) f(Q) f(L) f(A)
// end Generated by type.h.ijs

#define ON_TYPES(t, f) ON_##t##_TYPES(f)

typedef struct {T t; I r; Ptr v;} *V;

typedef Str  *E, Ev;
typedef Char *B, Bv;
typedef struct {V f; I l; V *x;} *O, Ov;
typedef struct {V f; I l; V *x;} *F, Fv;
typedef Str  *N, Nv;
typedef Str  *Q, Qv;
typedef Char *S, Sv;
typedef int64_t *Z, Zv;
typedef double  *R, Rv;
typedef struct {Rv a; Rv b;} *C, Cv;
typedef struct {T t; I c; I l; I o; V* v;} *L, Lv;
typedef struct {T t; I c; I l; I o; Ptr v;} *A, Av;
